{"version":3,"file":"chunk-9K8NJ2ic.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\" && !this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n          this.#currentThenable.reject(\n            new Error(\n              \"experimental_prefetchInRender feature flag is not enabled\"\n            )\n          );\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const MIN_SUSPENSE_TIME_MS = 1e3;\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS\n      );\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","defaultTimeoutProvider","setTimeout","callback","delay","clearTimeout","timeoutId","setInterval","clearInterval","intervalId","timeoutManager","_a","__privateAdd","_provider","_providerCalled","setTimeoutProvider","provider","__privateSet","__privateGet","WeakMap","isServer","window","globalThis","noop","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","hasOwn","prototype","hasOwnProperty","replaceEqualDeep","array","isPlainArray","aSize","length","bItems","bSize","copy","Array","equalItems","i","aItem","bItem","call","v","shallowEqualObjects","isArray","o","hasObjectPrototype","ctor","prot","getPrototypeOf","toString","replaceData","prevData","data","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","_b","super","_focused","_cleanup","_setup","onFocus","addEventListener","removeEventListener","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","pendingThenable","resolve","thenable","_resolve","_reject","finalize","assign","catch","reason","defaultScheduler","notifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","fn","setBatchNotifyFunction","setScheduler","createNotifyManager","onlineManager","_c","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","min","canFetch","networkMode","CancelledError","revert","silent","createRetryer","config","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","error","retry","retryDelay","shouldRetry","timeout","onFail","promise","cancel","cancelOptions","onCancel","continue","cancelRetry","continueRetry","start","Removable","_d","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","Query","_e","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","getDefaultState","meta","defaultState","setData","dataUpdatedAt","manual","remove","newData","__privateMethod","setState","setStateOptions","reset","some","observer","isDisabled","getObserversCount","dataUpdateCount","errorUpdateCount","isStatic","getCurrentResult","isInvalidated","isStaleByTime","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","fetchMeta","abort","_f","onSuccess","_h","_g","onSettled","_j","_i","onError","_l","_k","WeakSet","action","fetchFailureCount","fetchFailureReason","fetchState","newState","errorUpdatedAt","reducer","onQueryUpdate","initialData","hasData","initialDataUpdatedAt","QueryObserver","_QueryObserver_instances","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","bindMethods","shouldFetchOnMount","executeFetch_fn","updateResult","updateTimers_fn","shouldFetchOn","refetchOnReconnect","refetchOnWindowFocus","clearStaleTimeout_fn","clearRefetchInterval_fn","prevOptions","prevQuery","defaultQueryOptions","updateQuery_fn","_defaulted","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","getOptimisticResult","build","createResult","optimisticResult","trackResult","onPropTracked","Proxy","target","trackProp","experimental_prefetchInRender","Reflect","getCurrentQuery","fetchOptimistic","defaultedOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","skipSelect","placeholderData","select","selectError","isFetching","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","failureReason","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isPaused","isRefetchError","isEnabled","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","notify_fn","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","throwOnError","typedKey","has","shouldNotifyListeners","refetchInterval","updateRefetchInterval_fn","nextInterval","refetchIntervalInBackground","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","field","suspense","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","Mutation","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","variables","submittedAt","execute","mutationFn","restored","onMutate","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","Map","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","set","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","clear","getAll","from","defaultedFilters","findAll","event","resumePausedMutations","pausedMutations","all","map","id","QueryCache","_queries","getQueryDefaults","queryInMap","values","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isMutating","getQueryData","ensureQueryData","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","mutations","QueryClientContext","React.createContext","QueryClientProvider","children","React.useEffect","jsx","Provider","IsRestoringContext","QueryErrorResetBoundaryContext","isReset","clearReset","createValue","errorResetBoundary","useQuery","queryClient","Observer","isRestoring","React.useContext","useQueryClient","_experimental_beforeQuery","MIN_SUSPENSE_TIME_MS","clamp","originalStaleTime","ensureSuspenseTimers","ensurePreventErrorBoundaryRetry","useClearResetErrorBoundary","isNewCacheEntry","React.useState","shouldSubscribe","subscribed","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","shouldSuspend","params","shouldThrowError","getHasError","_experimental_afterQuery","willFetch","finally","useBaseQuery"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}