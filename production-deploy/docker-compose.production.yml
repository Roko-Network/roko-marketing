# Production Docker Compose for ROKO Network Marketing Site
# This configuration is optimized for production deployment
version: '3.8'

services:
  roko-marketing-prod:
    image: roko-marketing:production
    container_name: roko-marketing-prod
    restart: always
    ports:
      - "8080:80"  # Map to 8080 to avoid conflicts with local dev
    environment:
      - NODE_ENV=production
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=8192
      - TZ=UTC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      # Production nginx configs (read-only)
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/security.production.conf:/etc/nginx/conf.d/security.conf:ro
      # Logs volume for persistence
      - roko-logs-prod:/var/log/nginx
    networks:
      - roko-prod-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 256M
    labels:
      - "com.roko.service=marketing"
      - "com.roko.environment=production"
      - "com.roko.version=${VERSION:-latest}"
      - "traefik.enable=true"
      - "traefik.http.routers.roko-marketing.rule=Host(`marketing.roko.network`)"
      - "traefik.http.routers.roko-marketing.entrypoints=websecure"
      - "traefik.http.routers.roko-marketing.tls.certresolver=letsencrypt"
      - "traefik.http.services.roko-marketing.loadbalancer.server.port=80"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
        labels: "com.roko.service,com.roko.environment"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100M
      - /var/cache/nginx:uid=1001,gid=1001
      - /var/run:uid=1001,gid=1001

  # Nginx Prometheus Exporter for monitoring
  nginx-exporter-prod:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter-prod
    restart: always
    ports:
      - "9114:9113"  # Different port to avoid conflicts
    command:
      - -nginx.scrape-uri
      - http://roko-marketing-prod:80/nginx_status
    depends_on:
      - roko-marketing-prod
    networks:
      - roko-prod-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 64M
    labels:
      - "com.roko.service=nginx-exporter"
      - "com.roko.environment=production"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Reverse proxy with Traefik
  traefik:
    image: traefik:v3.0
    container_name: traefik-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard (should be secured in production)
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@roko.network}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
      - traefik-logs:/logs
    networks:
      - roko-prod-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    labels:
      - "com.roko.service=traefik"
      - "com.roko.environment=production"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    security_opt:
      - no-new-privileges:true
    profiles:
      - with-traefik

networks:
  roko-prod-network:
    driver: bridge
    name: roko-prod-network
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  roko-logs-prod:
    driver: local
    name: roko-logs-prod
  traefik-certificates:
    driver: local
    name: traefik-certificates
  traefik-logs:
    driver: local
    name: traefik-logs