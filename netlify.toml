# Netlify configuration for ROKO Network Marketing Site

[build]
  publish = "dist"
  command = "npm run build"
  functions = "netlify/functions"
  ignore = "git diff --quiet $CACHED_COMMIT_REF $COMMIT_REF"

[build.environment]
  NODE_VERSION = "20"
  NPM_FLAGS = "--prefer-offline"
  NODE_ENV = "production"
  VITE_BUILD_TARGET = "netlify"

# Production site configuration
[context.production]
  publish = "dist"
  command = "npm run build"

[context.production.environment]
  NODE_ENV = "production"
  VITE_BUILD_ENV = "production"

# Deploy preview configuration
[context.deploy-preview]
  publish = "dist"
  command = "npm run build:staging"

[context.deploy-preview.environment]
  NODE_ENV = "staging"
  VITE_BUILD_ENV = "staging"

# Branch deploy configuration
[context.branch-deploy]
  publish = "dist"
  command = "npm run build:staging"

# Redirects and rewrites
[[redirects]]
  from = "/api/*"
  to = "https://api.roko.network/api/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/ws/*"
  to = "wss://api.roko.network/ws/:splat"
  status = 200
  force = true

# SPA fallback
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "SAMEORIGIN"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), interest-cohort=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"

# CSP for HTML files
[[headers]]
  for = "/*.html"
  [headers.values]
    Content-Security-Policy = '''
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval'
        https://www.googletagmanager.com
        https://www.google-analytics.com
        https://cdn.jsdelivr.net
        https://unpkg.com;
      style-src 'self' 'unsafe-inline'
        https://fonts.googleapis.com
        https://cdn.jsdelivr.net;
      img-src 'self' data: https: blob:;
      font-src 'self'
        https://fonts.gstatic.com
        data:;
      connect-src 'self'
        https://api.roko.network
        wss://api.roko.network
        https://rpc.ankr.com
        https://cloudflare-eth.com
        https://www.google-analytics.com;
      object-src 'none';
      media-src 'self' data: https:;
      child-src 'self';
      worker-src 'self' blob:;
      manifest-src 'self';
      base-uri 'self';
      form-action 'self';
      frame-ancestors 'none';
      upgrade-insecure-requests;
    '''

# Cache optimization for static assets
[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/javascript; charset=utf-8"

[[headers]]
  for = "/*.mjs"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/javascript; charset=utf-8"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "text/css; charset=utf-8"

[[headers]]
  for = "/*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

[[headers]]
  for = "/*.ttf"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

[[headers]]
  for = "/*.eot"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.gif"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.ico"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/manifest.json"
  [headers.values]
    Content-Type = "application/manifest+json"
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Service-Worker-Allowed = "/"

# Edge functions (if needed)
# [[edge_functions]]
#   function = "geolocation"
#   path = "/api/geo"

# Plugin configuration
[[plugins]]
  package = "@netlify/plugin-lighthouse"

  [plugins.inputs]
    output_path = "reports/lighthouse"

[[plugins]]
  package = "netlify-plugin-cypress"

  [plugins.inputs.postBuild]
    enable = true

[[plugins]]
  package = "@netlify/plugin-sitemap"

  [plugins.inputs]
    baseUrl = "https://roko.network"
    pretty = true
    trailingSlash = false

# Form handling (if contact forms are added)
# [[forms]]
#   name = "contact"
#   action = "/thank-you"

# Split testing (A/B testing)
# [[split_tests]]
#   id = "hero-test"
#   path = "/"
#   branches = [
#     { branch = "main", percentage = 50 },
#     { branch = "feature/new-hero", percentage = 50 }
#   ]

# Large Media (for large assets)
# [large_media]
#   enable = true