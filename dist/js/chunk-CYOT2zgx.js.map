{"version":3,"file":"chunk-CYOT2zgx.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","defaultTimeoutProvider","setTimeout","callback","delay","clearTimeout","timeoutId","setInterval","clearInterval","intervalId","timeoutManager","_a","__privateAdd","_provider","_providerCalled","setTimeoutProvider","provider","__privateSet","__privateGet","WeakMap","isServer","window","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","hasOwn","prototype","hasOwnProperty","replaceEqualDeep","array","isPlainArray","aSize","length","bItems","bSize","copy","Array","equalItems","i","aItem","bItem","call","v","value","isArray","o","hasObjectPrototype","ctor","prot","getPrototypeOf","toString","replaceData","prevData","data","structuralSharing","addToEnd","items","item","max","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","_b","super","_focused","_cleanup","_setup","onFocus","addEventListener","removeEventListener","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","defaultScheduler","notifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","fn","setBatchNotifyFunction","setScheduler","createNotifyManager","onlineManager","_c","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","CancelledError","revert","silent","createRetryer","config","continueFn","isRetryCancelled","thenable","resolve","_resolve","_reject","finalize","assign","catch","reason","pendingThenable","isResolved","canContinue","canRun","canStart","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","error","retry","retryDelay","shouldRetry","timeout","onFail","promise","cancel","cancelOptions","onCancel","continue","cancelRetry","continueRetry","start","Removable","_d","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","Query","_e","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","getDefaultState","meta","defaultState","setData","updatedAt","dataUpdatedAt","manual","remove","newData","__privateMethod","setState","setStateOptions","reset","some","observer","resolveEnabled","enabled","isDisabled","getObserversCount","dataUpdateCount","errorUpdateCount","isStatic","getCurrentResult","isInvalidated","isStaleByTime","Date","now","timeUntilStale","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","fetchMeta","abort","_f","onSuccess","_h","_g","onSettled","_j","_i","onError","_l","_k","WeakSet","action","fetchFailureCount","fetchFailureReason","newState","errorUpdatedAt","reducer","onQueryUpdate","initialData","hasData","initialDataUpdatedAt","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","Mutation","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","Map","build","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","set","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","clear","getAll","from","defaultedFilters","findAll","event","resumePausedMutations","pausedMutations","all","map","id","QueryCache","_queries","defaultQueryOptions","getQueryDefaults","has","queryInMap","values","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","React.createContext","QueryClientProvider","children","React.useEffect","jsx","Provider"],"mappings":"wlBACA,IAAIA,EAAe,MACjB,WAAAC,GACEC,KAAKC,cAAgCC,IACrCF,KAAKG,UAAYH,KAAKG,UAAUC,KAAKJ,KACvC,CACA,SAAAG,CAAUE,GAGR,OAFAL,KAAKC,UAAUK,IAAID,GACnBL,KAAKO,cACE,KACLP,KAAKC,UAAUO,OAAOH,GACtBL,KAAKS,gBAET,CACA,YAAAC,GACE,OAAOV,KAAKC,UAAUU,KAAO,CAC/B,CACA,WAAAJ,GACA,CACA,aAAAE,GACA,GCnBEG,GAAyB,CAW3BC,WAAY,CAACC,EAAUC,IAAUF,WAAWC,EAAUC,GACtDC,aAAeC,GAAcD,aAAaC,GAC1CC,YAAa,CAACJ,EAAUC,IAAUG,YAAYJ,EAAUC,GACxDI,cAAgBC,GAAeD,cAAcC,IA4C3CC,GAAiB,IA1CAC,EAAA,MAAA,WAAAvB,GAOnBwB,EAAAvB,KAAAwB,EAAYZ,IACZW,EAAAvB,KAAAyB,GAAkB,EAAA,CAClB,kBAAAC,CAAmBC,GASjBC,EAAA5B,KAAKwB,EAAYG,EAInB,CACA,UAAAd,CAAWC,EAAUC,GAInB,OAAOc,EAAA7B,KAAKwB,GAAUX,WAAWC,EAAUC,EAC7C,CACA,YAAAC,CAAaC,GACXY,EAAA7B,KAAKwB,GAAUR,aAAaC,EAC9B,CACA,WAAAC,CAAYJ,EAAUC,GAIpB,OAAOc,EAAA7B,KAAKwB,GAAUN,YAAYJ,EAAUC,EAC9C,CACA,aAAAI,CAAcC,GACZS,EAAA7B,KAAKwB,GAAUL,cAAcC,EAC/B,GAjCAI,cACAC,EAAA,IAAAK,QARmBR,GCfjBS,GAA6B,oBAAXC,QAA0B,SAAUC,WAC1D,SAASC,KACT,CAUA,SAASC,GAAiBC,EAAWC,GACnC,MAA4B,mBAAdD,EAA2BA,EAAUC,GAASD,CAC9D,CAIA,SAASE,GAAWC,EAASF,GAC3B,MAAMG,KACJA,EAAO,MAAAC,MACPA,EAAAC,YACAA,EAAAC,UACAA,EAAAC,SACAA,EAAAC,MACAA,GACEN,EACJ,GAAIK,EACF,GAAIH,GACF,GAAIJ,EAAMS,YAAcC,GAAsBH,EAAUP,EAAMW,SAC5D,OAAO,WAECC,GAAgBZ,EAAMO,SAAUA,GAC1C,OAAO,EAGX,GAAa,QAATJ,EAAgB,CAClB,MAAMU,EAAWb,EAAMa,WACvB,GAAa,WAATV,IAAsBU,EACxB,OAAO,EAET,GAAa,aAATV,GAAuBU,EACzB,OAAO,CAEX,CACA,QAAqB,kBAAVL,GAAuBR,EAAMc,YAAcN,GAGlDH,GAAeA,IAAgBL,EAAMe,MAAMV,aAG3CC,IAAcA,EAAUN,GAI9B,CACA,SAASgB,GAAcd,EAASe,GAC9B,MAAMb,MAAEA,EAAAc,OAAOA,EAAAZ,UAAQA,EAAAa,YAAWA,GAAgBjB,EAClD,GAAIiB,EAAa,CACf,IAAKF,EAASN,QAAQQ,YACpB,OAAO,EAET,GAAIf,GACF,GAAIgB,GAAQH,EAASN,QAAQQ,eAAiBC,GAAQD,GACpD,OAAO,WAECP,GAAgBK,EAASN,QAAQQ,YAAaA,GACxD,OAAO,CAEX,CACA,QAAID,GAAUD,EAASF,MAAMG,SAAWA,GAGpCZ,IAAcA,EAAUW,GAI9B,CACA,SAASP,GAAsBH,EAAUI,GAEvC,cADeA,WAASU,iBAAkBD,IAC5Bb,EAChB,CACA,SAASa,GAAQb,GACf,OAAOe,KAAKC,UACVhB,EACA,CAACiB,EAAGC,IAAQC,GAAcD,GAAOE,OAAOC,KAAKH,GAAKI,OAAOC,OAAO,CAACC,EAAQC,KACvED,EAAOC,GAAOP,EAAIO,GACXD,GACN,CAAA,GAAMN,EAEb,CACA,SAASb,GAAgBqB,EAAGC,GAC1B,OAAID,IAAMC,UAGCD,UAAaC,MAGpBD,IAAKC,GAAkB,iBAAND,GAA+B,iBAANC,IACrCP,OAAOC,KAAKM,GAAGC,MAAOH,GAAQpB,GAAgBqB,EAAED,GAAME,EAAEF,IAGnE,CACA,IAAII,GAAST,OAAOU,UAAUC,eAC9B,SAASC,GAAiBN,EAAGC,GAC3B,GAAID,IAAMC,EACR,OAAOD,EAET,MAAMO,EAAQC,GAAaR,IAAMQ,GAAaP,GAC9C,KAAKM,GAAWd,GAAcO,IAAMP,GAAcQ,IAAK,OAAOA,EAC9D,MACMQ,GADSF,EAAQP,EAAIN,OAAOC,KAAKK,IAClBU,OACfC,EAASJ,EAAQN,EAAIP,OAAOC,KAAKM,GACjCW,EAAQD,EAAOD,OACfG,EAAON,EAAQ,IAAIO,MAAMF,GAAS,CAAA,EACxC,IAAIG,EAAa,EACjB,IAAA,IAASC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC9B,MAAMjB,EAAMQ,EAAQS,EAAIL,EAAOK,GACzBC,EAAQjB,EAAED,GACVmB,EAAQjB,EAAEF,GAChB,GAAIkB,IAAUC,EAAO,CACnBL,EAAKd,GAAOkB,GACRV,EAAQS,EAAIP,EAAQN,GAAOgB,KAAKnB,EAAGD,KAAMgB,IAC7C,QACF,CACA,GAAc,OAAVE,GAA4B,OAAVC,GAAmC,iBAAVD,GAAuC,iBAAVC,EAAoB,CAC9FL,EAAKd,GAAOmB,EACZ,QACF,CACA,MAAME,EAAId,GAAiBW,EAAOC,GAClCL,EAAKd,GAAOqB,EACRA,IAAMH,GAAOF,GACnB,CACA,OAAON,IAAUG,GAASG,IAAeN,EAAQT,EAAIa,CACvD,CAYA,SAASL,GAAaa,GACpB,OAAOP,MAAMQ,QAAQD,IAAUA,EAAMX,SAAWhB,OAAOC,KAAK0B,GAAOX,MACrE,CACA,SAASjB,GAAc8B,GACrB,IAAKC,GAAmBD,GACtB,OAAO,EAET,MAAME,EAAOF,EAAE9F,YACf,QAAa,IAATgG,EACF,OAAO,EAET,MAAMC,EAAOD,EAAKrB,UAClB,QAAKoB,GAAmBE,MAGnBA,EAAKrB,eAAe,kBAGrBX,OAAOiC,eAAeJ,KAAO7B,OAAOU,SAI1C,CACA,SAASoB,GAAmBD,GAC1B,MAA6C,oBAAtC7B,OAAOU,UAAUwB,SAAST,KAAKI,EACxC,CAMA,SAASM,GAAYC,EAAUC,EAAMrD,GACnC,MAAyC,mBAA9BA,EAAQsD,kBACVtD,EAAQsD,kBAAkBF,EAAUC,IACJ,IAA9BrD,EAAQsD,kBAWV1B,GAAiBwB,EAAUC,GAE7BA,CACT,CAIA,SAASE,GAASC,EAAOC,EAAMC,EAAM,GACnC,MAAMC,EAAW,IAAIH,EAAOC,GAC5B,OAAOC,GAAOC,EAAS3B,OAAS0B,EAAMC,EAASC,MAAM,GAAKD,CAC5D,CACA,SAASE,GAAWL,EAAOC,EAAMC,EAAM,GACrC,MAAMC,EAAW,CAACF,KAASD,GAC3B,OAAOE,GAAOC,EAAS3B,OAAS0B,EAAMC,EAASC,MAAM,MAASD,CAChE,CACA,IAAIG,GAAYC,SAChB,SAASC,GAAchE,EAASiE,GAQ9B,OAAKjE,EAAQkE,UAAW,MAAAD,OAAA,EAAAA,EAAcE,gBAC7B,IAAMF,EAAaE,eAEvBnE,EAAQkE,SAAWlE,EAAQkE,UAAYJ,GAGrC9D,EAAQkE,QAFN,IAAME,QAAQC,OAAO,IAAIC,MAAM,qBAAqBtE,EAAQF,cAGvE,CC7NA,IA2DIyE,GAAe,IA3DAC,gBAAc1H,EAI/B,WAAAC,GACE0H,QAJFlG,EAAAvB,KAAA0H,GACAnG,EAAAvB,KAAA2H,GACApG,EAAAvB,KAAA4H,GAGEhG,EAAA5B,KAAK4H,EAAUC,IACb,IAAK9F,IAAYC,OAAO8F,iBAAkB,CACxC,MAAMzH,EAAW,IAAMwH,IAEvB,OADA7F,OAAO8F,iBAAiB,mBAAoBzH,GAAU,GAC/C,KACL2B,OAAO+F,oBAAoB,mBAAoB1H,GAEnD,GAGJ,CACA,WAAAE,GACOsB,OAAK8F,IACR3H,KAAKgI,iBAAiBnG,OAAK+F,GAE/B,CACA,aAAAnH,SACOT,KAAKU,iBACR,OAAAY,EAAAO,EAAA7B,KAAK2H,KAALrG,EAAAmE,KAAAzF,MACA4B,EAAA5B,KAAK2H,OAAW,GAEpB,CACA,gBAAAK,CAAiBC,SACfrG,EAAA5B,KAAK4H,EAASK,GACd,OAAA3G,EAAAO,EAAA7B,KAAK2H,KAALrG,EAAAmE,KAAAzF,MACA4B,EAAA5B,KAAK2H,EAAWM,EAAOC,IACE,kBAAZA,EACTlI,KAAKmI,WAAWD,GAEhBlI,KAAK6H,YAGX,CACA,UAAAM,CAAWD,GACOrG,OAAK6F,KAAaQ,IAEhCtG,EAAA5B,KAAK0H,EAAWQ,GAChBlI,KAAK6H,UAET,CACA,OAAAA,GACE,MAAMO,EAAYpI,KAAKoI,YACvBpI,KAAKC,UAAUoI,QAAShI,IACtBA,EAAS+H,IAEb,CACA,SAAAA,SACE,MAA6B,kBAAlBvG,EAAA7B,KAAK0H,GACP7F,EAAA7B,KAAK0H,GAEkC,YAAzC,OAAApG,EAAAW,WAAWqG,eAAX,EAAAhH,EAAqBiH,gBAC9B,GAxDAb,EAAA,IAAA5F,QACA6F,cACAC,EAAA,IAAA9F,QAHiB0F,GCDfgB,GH0DJ,SAA8B1H,GAC5BD,WAAWC,EAAU,EACvB,EGiBI2H,GA5EJ,WACE,IAAIC,EAAQ,GACRC,EAAe,EACfC,EAAY9H,IACdA,KAEE+H,EAAiB/H,IACnBA,KAEEgI,EAAaN,GACjB,MAAMO,EAAYjI,IACZ6H,EACFD,EAAMM,KAAKlI,GAEXgI,EAAW,KACTF,EAAS9H,MAiBf,MAAO,CACLmI,MAAQnI,IACN,IAAIsD,EACJuE,IACA,IACEvE,EAAStD,GACX,CAAA,QACE6H,IACKA,GArBG,MACZ,MAAMO,EAAgBR,EACtBA,EAAQ,GACJQ,EAAclE,QAChB8D,EAAW,KACTD,EAAc,KACZK,EAAcb,QAASvH,IACrB8H,EAAS9H,UAeXqI,EAEJ,CACA,OAAO/E,GAKTgF,WAAatI,GACJ,IAAIuI,KACTN,EAAS,KACPjI,KAAYuI,MAIlBN,WAKAO,kBAAoBC,IAClBX,EAAWW,GAMbC,uBAAyBD,IACvBV,EAAgBU,GAElBE,aAAeF,IACbT,EAAaS,GAGnB,CACoBG,GC3BhBC,GAAgB,IAjDAC,gBAAc9J,EAIhC,WAAAC,GACE0H,QAJFlG,EAAAvB,KAAA6J,GAAU,GACVtI,EAAAvB,KAAA2H,GACApG,EAAAvB,KAAA4H,GAGEhG,EAAA5B,KAAK4H,EAAUkC,IACb,IAAK/H,IAAYC,OAAO8F,iBAAkB,CACxC,MAAMiC,EAAiB,IAAMD,GAAS,GAChCE,EAAkB,IAAMF,GAAS,GAGvC,OAFA9H,OAAO8F,iBAAiB,SAAUiC,GAAgB,GAClD/H,OAAO8F,iBAAiB,UAAWkC,GAAiB,GAC7C,KACLhI,OAAO+F,oBAAoB,SAAUgC,GACrC/H,OAAO+F,oBAAoB,UAAWiC,GAE1C,GAGJ,CACA,WAAAzJ,GACOsB,OAAK8F,IACR3H,KAAKgI,iBAAiBnG,OAAK+F,GAE/B,CACA,aAAAnH,SACOT,KAAKU,iBACR,OAAAY,EAAAO,EAAA7B,KAAK2H,KAALrG,EAAAmE,KAAAzF,MACA4B,EAAA5B,KAAK2H,OAAW,GAEpB,CACA,gBAAAK,CAAiBC,SACfrG,EAAA5B,KAAK4H,EAASK,GACd,OAAA3G,EAAAO,EAAA7B,KAAK2H,KAALrG,EAAAmE,KAAAzF,MACA4B,EAAA5B,KAAK2H,EAAWM,EAAMjI,KAAKiK,UAAU7J,KAAKJ,OAC5C,CACA,SAAAiK,CAAUC,GACQrI,OAAKgI,KAAYK,IAE/BtI,EAAA5B,KAAK6J,EAAUK,GACflK,KAAKC,UAAUoI,QAAShI,IACtBA,EAAS6J,KAGf,CACA,QAAAC,GACE,OAAOtI,EAAA7B,KAAK6J,EACd,GA9CAA,EAAA,IAAA/H,QACA6F,EAAA,IAAA7F,QACA8F,EAAA,IAAA9F,QAHkB8H,GCEpB,SAASQ,GAAkBC,GACzB,OAAOC,KAAKC,IAAI,IAAM,GAAKF,EAAc,IAC3C,CACA,SAASG,GAASC,GAChB,MAAqC,YAA7BA,GAAe,WAAyBd,GAAcQ,UAChE,CACA,IAAIO,GAAiB,cAAcpD,MACjC,WAAAvH,CAAYiD,GACVyE,MAAM,kBACNzH,KAAK2K,OAAS,MAAA3H,OAAA,EAAAA,EAAS2H,OACvB3K,KAAK4K,OAAS,MAAA5H,OAAA,EAAAA,EAAS4H,MACzB,GAKF,SAASC,GAAcC,GACrB,IAEIC,EAFAC,GAAmB,EACnBX,EAAe,EAEnB,MAAMY,ECvBR,WACE,IAAIC,EACA7D,EACJ,MAAM4D,EAAW,IAAI7D,QAAQ,CAAC+D,EAAUC,KACtCF,EAAUC,EACV9D,EAAS+D,IAKX,SAASC,EAAShF,GAChBrC,OAAOsH,OAAOL,EAAU5E,UACjB4E,EAASC,eACTD,EAAS5D,MAClB,CAeA,OAtBA4D,EAAS1H,OAAS,UAClB0H,EAASM,MAAM,QAOfN,EAASC,QAAWvF,IAClB0F,EAAS,CACP9H,OAAQ,YACRoC,UAEFuF,EAAQvF,IAEVsF,EAAS5D,OAAUmE,IACjBH,EAAS,CACP9H,OAAQ,WACRiI,WAEFnE,EAAOmE,IAEFP,CACT,CDPmBQ,GACXC,EAAa,IAA0B,YAApBT,EAAS1H,OAc5BoI,EAAc,IAAMpE,GAAaa,cAAuC,WAAvB0C,EAAOL,aAA4Bd,GAAcQ,aAAeW,EAAOc,SACxHC,EAAW,IAAMrB,GAASM,EAAOL,cAAgBK,EAAOc,SACxDV,EAAWvF,IACV+F,MACH,MAAAX,GAAAA,IACAE,EAASC,QAAQvF,KAGf0B,EAAU1B,IACT+F,MACH,MAAAX,GAAAA,IACAE,EAAS5D,OAAO1B,KAGdmG,EAAQ,IACL,IAAI1E,QAAS2E,UAClBhB,EAAcpF,KACR+F,KAAgBC,MAClBI,EAAgBpG,IAGpB,OAAArE,EAAAwJ,EAAOkB,UAAP1K,EAAAmE,KAAAqF,KACCmB,KAAK,WACNlB,OAAa,EACRW,KACH,OAAApK,EAAAwJ,EAAOoB,aAAP5K,EAAAmE,KAAAqF,KAIAqB,EAAM,KACV,GAAIT,IACF,OAEF,IAAIU,EACJ,MAAMjF,EAAkC,IAAjBkD,EAAqBS,EAAO3D,oBAAiB,EACpE,IACEiF,EAAiBjF,GAAkB2D,EAAOvB,IAC5C,OAAS8C,GACPD,EAAiBhF,QAAQC,OAAOgF,EAClC,CACAjF,QAAQ8D,QAAQkB,GAAgBH,KAAKf,GAASK,MAAOc,UACnD,GAAIX,IACF,OAEF,MAAMY,EAAQxB,EAAOwB,QAAUvK,GAAW,EAAI,GACxCwK,EAAazB,EAAOyB,YAAcnC,GAClCrJ,EAA8B,mBAAfwL,EAA4BA,EAAWlC,EAAcgC,GAASE,EAC7EC,GAAwB,IAAVF,GAAmC,iBAAVA,GAAsBjC,EAAeiC,GAA0B,mBAAVA,GAAwBA,EAAMjC,EAAcgC,GJuFpJ,IAAeI,GItFLzB,GAAqBwB,GAIzBnC,IACA,OAAA/I,EAAAwJ,EAAO4B,SAAPpL,EAAAmE,OAAgB4E,EAAcgC,IJiFrBI,EIhFH1L,EJiFH,IAAIqG,QAAS8D,IAClB7J,GAAeR,WAAWqK,EAASuB,MIlFpBR,KAAK,IACTN,SAAgB,EAASG,KAC/BG,KAAK,KACFjB,EACF3D,EAAOgF,GAEPF,OAXF9E,EAAOgF,MAgBb,MAAO,CACLM,QAAS1B,EACT1H,OAAQ,IAAM0H,EAAS1H,OACvBqJ,OAjFcC,UACd,IAAKnB,IAAc,CACjB,MAAMW,EAAQ,IAAI3B,GAAemC,GACjCxF,EAAOgF,GACP,OAAA/K,EAAAwJ,EAAOgC,WAAPxL,EAAAmE,KAAAqF,EAAkBuB,EACpB,GA6EAU,SAAU,KACR,MAAAhC,GAAAA,IACOE,GAET+B,YA/EkB,KAClBhC,GAAmB,GA+EnBiC,cA7EoB,KACpBjC,GAAmB,GA6EnBa,WACAqB,MAAO,KACDrB,IACFM,IAEAL,IAAQG,KAAKE,GAERlB,GAGb,CE1HA,IAAIkC,IAAYC,EAAA,MAAA,WAAArN,GACdwB,EAAAvB,KAAAqN,EAAA,CACA,OAAAC,GACEtN,KAAKuN,gBACP,CACA,UAAAC,GNAF,IAAwB7H,EMCpB3F,KAAKuN,iBNAiB,iBADF5H,EMED3F,KAAKyN,SNDU9H,GAAS,GAAKA,IAAU+H,KMExD9L,EAAA5B,KAAKqN,EAAahM,GAAeR,WAAW,KAC1Cb,KAAK2N,kBACJ3N,KAAKyN,QAEZ,CACA,YAAAG,CAAaC,GACX7N,KAAKyN,OAASnD,KAAK5D,IACjB1G,KAAKyN,QAAU,EACfI,IAAc9L,GAAW2L,IAAW,KAExC,CACA,cAAAH,GACM1L,OAAKwL,KACPhM,GAAeL,aAAaa,OAAKwL,IACjCzL,EAAA5B,KAAKqN,OAAa,GAEtB,GAvBAA,EAAA,IAAAvL,QADcsL,GCUZU,IAAQC,gBAAcZ,GAQxB,WAAApN,CAAY+K,GACVrD,QATQlG,EAAAvB,KAAAgO,GACVzM,EAAAvB,KAAAiO,GACA1M,EAAAvB,KAAAkO,GACA3M,EAAAvB,KAAAmO,GACA5M,EAAAvB,KAAAoO,GACA7M,EAAAvB,KAAAqO,GACA9M,EAAAvB,KAAAsO,GACA/M,EAAAvB,KAAAuO,GAGE3M,EAAA5B,KAAKuO,GAAuB,GAC5B3M,EAAA5B,KAAKsO,EAAkBxD,EAAO0D,gBAC9BxO,KAAKyO,WAAW3D,EAAO9H,SACvBhD,KAAK0O,UAAY,GACjB9M,EAAA5B,KAAKoO,EAAUtD,EAAO6D,QACtB/M,EAAA5B,KAAKmO,EAAStM,EAAA7B,KAAKoO,GAAQQ,iBAC3B5O,KAAK4C,SAAWkI,EAAOlI,SACvB5C,KAAK8C,UAAYgI,EAAOhI,UACxBlB,EAAA5B,KAAKiO,EAAgBY,GAAgB7O,KAAKgD,UAC1ChD,KAAKoD,MAAQ0H,EAAO1H,OAASvB,EAAA7B,KAAKiO,GAClCjO,KAAKwN,YACP,CACA,QAAIsB,GACF,OAAO9O,KAAKgD,QAAQ8L,IACtB,CACA,WAAInC,SACF,OAAO,OAAArL,EAAAO,EAAA7B,KAAKqO,SAAL,EAAA/M,EAAeqL,OACxB,CACA,UAAA8B,CAAWzL,GAGT,GAFAhD,KAAKgD,QAAU,IAAKnB,EAAA7B,KAAKsO,MAAoBtL,GAC7ChD,KAAK4N,aAAa5N,KAAKgD,QAAQyK,QAC3BzN,KAAKoD,YAA6B,IAApBpD,KAAKoD,MAAMiD,KAAiB,CAC5C,MAAM0I,EAAeF,GAAgB7O,KAAKgD,cAChB,IAAtB+L,EAAa1I,OACfrG,KAAKgP,QAAQD,EAAa1I,KAAM,CAC9B4I,UAAWF,EAAaG,cACxBC,QAAQ,IAEVvN,EAAA5B,KAAKiO,EAAgBc,GAEzB,CACF,CACA,cAAApB,GACO3N,KAAK0O,UAAU1J,QAAqC,SAA3BhF,KAAKoD,MAAMV,aACvCb,EAAA7B,KAAKmO,GAAOiB,OAAOpP,KAEvB,CACA,OAAAgP,CAAQK,EAASrM,GACf,MAAMqD,EAAOF,GAAYnG,KAAKoD,MAAMiD,KAAMgJ,EAASrP,KAAKgD,SAOxD,OANAsM,EAAAtP,KAAKgO,KAALvI,KAAAzF,KAAe,CACbqG,OACA7D,KAAM,UACN0M,cAAe,MAAAlM,OAAA,EAAAA,EAASiM,UACxBE,OAAQ,MAAAnM,OAAA,EAAAA,EAASmM,SAEZ9I,CACT,CACA,QAAAkJ,CAASnM,EAAOoM,GACdF,EAAAtP,KAAKgO,KAALvI,KAAAzF,KAAe,CAAEwC,KAAM,WAAYY,QAAOoM,mBAC5C,CACA,MAAA5C,CAAO5J,WACL,MAAM2J,EAAU,OAAArL,EAAAO,EAAA7B,KAAKqO,WAAL/M,EAAeqL,QAE/B,OADA,OAAAnF,EAAA3F,EAAA7B,KAAKqO,KAAL7G,EAAeoF,OAAO5J,GACf2J,EAAUA,EAAQV,KAAK/J,IAAMqJ,MAAMrJ,IAAQkF,QAAQ8D,SAC5D,CACA,OAAAoC,GACE7F,MAAM6F,UACNtN,KAAK4M,OAAO,CAAEhC,QAAQ,GACxB,CACA,KAAA6E,GACEzP,KAAKsN,UACLtN,KAAKuP,SAAS1N,OAAKoM,GACrB,CACA,QAAA/K,GACE,OAAOlD,KAAK0O,UAAUgB,KACnBC,IAAaC,OAAmD,KPtE3C,mBADJC,EOuEWF,EAAS3M,QAAQ6M,SPtEXA,EOsEoB7P,MPtEH6P,GAD1D,IAAwBA,GOyEtB,CACA,UAAAC,GACE,OAAI9P,KAAK+P,oBAAsB,GACrB/P,KAAKkD,WAERlD,KAAKgD,QAAQkE,UAAYJ,IAAa9G,KAAKoD,MAAM4M,gBAAkBhQ,KAAKoD,MAAM6M,mBAAqB,CAC5G,CACA,QAAAC,GACE,OAAIlQ,KAAK+P,oBAAsB,GACtB/P,KAAK0O,UAAUgB,KACnBC,GAAoE,WAAvDxN,GAAiBwN,EAAS3M,QAAQZ,UAAWpC,MAIjE,CACA,OAAAmD,GACE,OAAInD,KAAK+P,oBAAsB,EACtB/P,KAAK0O,UAAUgB,KACnBC,GAAaA,EAASQ,mBAAmBhN,cAGnB,IAApBnD,KAAKoD,MAAMiD,MAAmBrG,KAAKoD,MAAMgN,aAClD,CACA,aAAAC,CAAcjO,EAAY,GACxB,YAAwB,IAApBpC,KAAKoD,MAAMiD,MAGG,WAAdjE,MAGApC,KAAKoD,MAAMgN,gBP7GnB,SAAwBnB,EAAW7M,GACjC,OAAOkI,KAAK5D,IAAIuI,GAAa7M,GAAa,GAAKkO,KAAKC,MAAO,EAC7D,CO8GYC,CAAexQ,KAAKoD,MAAM8L,cAAe9M,GACnD,CACA,OAAAyF,SACE,MAAM8H,EAAW3P,KAAK0O,UAAU+B,KAAMC,GAAMA,EAAEC,4BAC9C,MAAAhB,GAAAA,EAAUiB,QAAQ,CAAEC,eAAe,IACnC,OAAAvP,EAAAO,EAAA7B,KAAKqO,KAAL/M,EAAeyL,UACjB,CACA,QAAAjD,SACE,MAAM6F,EAAW3P,KAAK0O,UAAU+B,KAAMC,GAAMA,EAAEI,0BAC9C,MAAAnB,GAAAA,EAAUiB,QAAQ,CAAEC,eAAe,IACnC,OAAAvP,EAAAO,EAAA7B,KAAKqO,KAAL/M,EAAeyL,UACjB,CACA,WAAAgE,CAAYpB,GACL3P,KAAK0O,UAAUsC,SAASrB,KAC3B3P,KAAK0O,UAAU1F,KAAK2G,GACpB3P,KAAKuN,iBACL1L,EAAA7B,KAAKmO,GAAO8C,OAAO,CAAEzO,KAAM,gBAAiBH,MAAOrC,KAAM2P,aAE7D,CACA,cAAAuB,CAAevB,GACT3P,KAAK0O,UAAUsC,SAASrB,KAC1B3P,KAAK0O,UAAY1O,KAAK0O,UAAUyC,OAAQT,GAAMA,IAAMf,GAC/C3P,KAAK0O,UAAU1J,SACdnD,OAAKwM,KACHxM,OAAK0M,GACP1M,EAAA7B,KAAKqO,GAASzB,OAAO,CAAEjC,QAAQ,IAE/B9I,EAAA7B,KAAKqO,GAASrB,eAGlBhN,KAAKwN,cAEP3L,EAAA7B,KAAKmO,GAAO8C,OAAO,CAAEzO,KAAM,kBAAmBH,MAAOrC,KAAM2P,aAE/D,CACA,iBAAAI,GACE,OAAO/P,KAAK0O,UAAU1J,MACxB,CACA,UAAAoM,GACOpR,KAAKoD,MAAMgN,eACdd,EAAAtP,KAAKgO,EAAAqD,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,cAE3B,CACA,WAAM8O,CAAMtO,EAASiE,+BACnB,GAA+B,SAA3BjH,KAAKoD,MAAMV,aAGa,cAA5B,OAAApB,EAAAO,EAAA7B,KAAKqO,SAAL,EAAA/M,EAAeiC,UACb,QAAwB,IAApBvD,KAAKoD,MAAMiD,aAAmBY,WAAc4J,eAC9C7Q,KAAK4M,OAAO,CAAEhC,QAAQ,SACxB,GAAW/I,OAAKwM,GAEd,OADAxM,EAAA7B,KAAKqO,GAASpB,gBACPpL,OAAKwM,GAAS1B,QAMzB,GAHI3J,GACFhD,KAAKyO,WAAWzL,IAEbhD,KAAKgD,QAAQkE,QAAS,CACzB,MAAMyI,EAAW3P,KAAK0O,UAAU+B,KAAMC,GAAMA,EAAE1N,QAAQkE,SAClDyI,GACF3P,KAAKyO,WAAWkB,EAAS3M,QAE7B,CAQA,MAAMuO,EAAkB,IAAIC,gBACtBC,EAAqBC,IACzB1N,OAAO2N,eAAeD,EAAQ,SAAU,CACtCE,YAAY,EACZC,IAAK,KACHjQ,EAAA5B,KAAKuO,GAAuB,GACrBgD,EAAgBO,WAIvBC,EAAU,KACd,MAAM7K,EAAUF,GAAchH,KAAKgD,QAASiE,GAUtC+K,EATuB,MAC3B,MAAMC,EAAkB,CACtBtD,OAAQ9M,EAAA7B,KAAKoO,GACbxL,SAAU5C,KAAK4C,SACfkM,KAAM9O,KAAK8O,MAGb,OADA2C,EAAkBQ,GACXA,GAEcC,GAEvB,OADAtQ,EAAA5B,KAAKuO,GAAuB,GACxBvO,KAAKgD,QAAQmP,UACRnS,KAAKgD,QAAQmP,UAClBjL,EACA8K,EACAhS,MAGGkH,EAAQ8K,IAcXI,EAZqB,MACzB,MAAMC,EAAW,CACfpL,eACAjE,QAAShD,KAAKgD,QACdJ,SAAU5C,KAAK4C,SACf+L,OAAQ9M,EAAA7B,KAAKoO,GACbhL,MAAOpD,KAAKoD,MACZ2O,WAGF,OADAN,EAAkBY,GACXA,GAEOC,GAChB,OAAA9K,EAAAxH,KAAKgD,QAAQuP,WAAb/K,EAAuBgL,QAAQJ,EAASpS,MACxC4B,EAAA5B,KAAKkO,EAAelO,KAAKoD,OACM,SAA3BpD,KAAKoD,MAAMV,aAA0B1C,KAAKoD,MAAMqP,aAAc,OAAA7I,EAAAwI,EAAQnL,mBAAR,EAAA2C,EAAsBkF,OACtFQ,EAAAtP,KAAKgO,EAAAqD,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,QAASsM,KAAM,OAAA1B,EAAAgF,EAAQnL,mBAAR,EAAAmG,EAAsB0B,OAE9DlN,EAAA5B,KAAKqO,EAAWxD,GAAc,CAC5B1D,eAAgB,MAAAF,OAAA,EAAAA,EAAcE,eAC9BoC,GAAI6I,EAAQL,QACZjF,SAAWT,IACLA,aAAiB3B,IAAkB2B,EAAM1B,QAC3C3K,KAAKuP,SAAS,IACT1N,EAAA7B,KAAKkO,GACRxL,YAAa,SAGjB6O,EAAgBmB,SAElBhG,OAAQ,CAACrC,EAAcgC,KACrBiD,EAAAtP,KAAKgO,KAALvI,KAAAzF,KAAe,CAAEwC,KAAM,SAAU6H,eAAcgC,WAEjDL,QAAS,KACPsD,EAAAtP,KAAKgO,EAAAqD,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,WAEzB0J,WAAY,KACVoD,EAAAtP,KAAKgO,EAAAqD,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,cAEzB8J,MAAO8F,EAAQpP,QAAQsJ,MACvBC,WAAY6F,EAAQpP,QAAQuJ,WAC5B9B,YAAa2H,EAAQpP,QAAQyH,YAC7BmB,OAAQ,KAAM,KAEhB,IACE,MAAMvF,QAAaxE,EAAA7B,KAAKqO,GAASnB,QACjC,QAAa,IAAT7G,EAMF,MAAM,IAAIiB,MAAM,GAAGtH,KAAK8C,+BAS1B,OAPA9C,KAAKgP,QAAQ3I,GACb,OAAAsM,GAAA5E,EAAAlM,EAAA7B,KAAKmO,GAAOrD,QAAO8H,YAAnBD,EAAAlN,KAAAsI,EAA+B1H,EAAMrG,MACrC,OAAA6S,GAAAC,EAAAjR,EAAA7B,KAAKmO,GAAOrD,QAAOiI,YAAnBF,EAAApN,KAAAqN,EACEzM,EACArG,KAAKoD,MAAMiJ,MACXrM,MAEKqG,CACT,OAASgG,GACP,GAAIA,aAAiB3B,GAAgB,CACnC,GAAI2B,EAAMzB,OACR,OAAO/I,OAAKwM,GAAS1B,QACvB,GAAWN,EAAM1B,OAAQ,CACvB,QAAwB,IAApB3K,KAAKoD,MAAMiD,KACb,MAAMgG,EAER,OAAOrM,KAAKoD,MAAMiD,IACpB,CACF,CAcA,MAbAiJ,EAAAtP,KAAKgO,KAALvI,KAAAzF,KAAe,CACbwC,KAAM,QACN6J,UAEF,OAAA2G,GAAAC,EAAApR,EAAA7B,KAAKmO,GAAOrD,QAAOoI,UAAnBF,EAAAvN,KAAAwN,EACE5G,EACArM,MAEF,OAAAmT,GAAAC,EAAAvR,EAAA7B,KAAKmO,GAAOrD,QAAOiI,YAAnBI,EAAA1N,KAAA2N,EACEpT,KAAKoD,MAAMiD,KACXgG,EACArM,MAEIqM,CACR,CAAA,QACErM,KAAKwN,YACP,CACF,GA9SAS,EAAA,IAAAnM,QACAoM,EAAA,IAAApM,QACAqM,EAAA,IAAArM,QACAsM,EAAA,IAAAtM,QACAuM,EAAA,IAAAvM,QACAwM,cACAC,EAAA,IAAAzM,QAPUkM,EAAA,IAAAqF,QAgTVhC,WAAUiC,GAkERtT,KAAKoD,MAjEW,CAACA,IACf,OAAQkQ,EAAO9Q,MACb,IAAK,SACH,MAAO,IACFY,EACHmQ,kBAAmBD,EAAOjJ,aAC1BmJ,mBAAoBF,EAAOjH,OAE/B,IAAK,QACH,MAAO,IACFjJ,EACHV,YAAa,UAEjB,IAAK,WACH,MAAO,IACFU,EACHV,YAAa,YAEjB,IAAK,QACH,MAAO,IACFU,MAsDKiD,EArDMjD,EAAMiD,KAqDNrD,EArDYhD,KAAKgD,QAsDlC,CACLuQ,kBAAmB,EACnBC,mBAAoB,KACpB9Q,YAAa8H,GAASxH,EAAQyH,aAAe,WAAa,iBAC9C,IAATpE,GAAmB,CACpBgG,MAAO,KACP9I,OAAQ,aA3DFkP,UAAWa,EAAOxE,MAAQ,MAE9B,IAAK,UACH,MAAM2E,EAAW,IACZrQ,EACHiD,KAAMiN,EAAOjN,KACb2J,gBAAiB5M,EAAM4M,gBAAkB,EACzCd,cAAeoE,EAAOpE,eAAiBoB,KAAKC,MAC5ClE,MAAO,KACP+D,eAAe,EACf7M,OAAQ,cACJ+P,EAAOnE,QAAU,CACnBzM,YAAa,OACb6Q,kBAAmB,EACnBC,mBAAoB,OAIxB,OADA5R,EAAA5B,KAAKkO,EAAeoF,EAAOnE,OAASsE,OAAW,GACxCA,EACT,IAAK,QACH,MAAMpH,EAAQiH,EAAOjH,MACrB,MAAO,IACFjJ,EACHiJ,QACA4D,iBAAkB7M,EAAM6M,iBAAmB,EAC3CyD,eAAgBpD,KAAKC,MACrBgD,kBAAmBnQ,EAAMmQ,kBAAoB,EAC7CC,mBAAoBnH,EACpB3J,YAAa,OACba,OAAQ,SAEZ,IAAK,aACH,MAAO,IACFH,EACHgN,eAAe,GAEnB,IAAK,WACH,MAAO,IACFhN,KACAkQ,EAAOlQ,OAatB,IAAoBiD,EAAMrD,GATT2Q,CAAQ3T,KAAKoD,OAC1BqF,GAAcQ,MAAM,KAClBjJ,KAAK0O,UAAUrG,QAASsH,IACtBA,EAASiE,kBAEX/R,EAAA7B,KAAKmO,GAAO8C,OAAO,CAAE5O,MAAOrC,KAAMwC,KAAM,UAAW8Q,YAEvD,EAzXUvF,GAsYZ,SAASc,GAAgB7L,GACvB,MAAMqD,EAAsC,mBAAxBrD,EAAQ6Q,YAA6B7Q,EAAQ6Q,cAAgB7Q,EAAQ6Q,YACnFC,OAAmB,IAATzN,EACV0N,EAAuBD,EAAkD,mBAAjC9Q,EAAQ+Q,qBAAsC/Q,EAAQ+Q,uBAAyB/Q,EAAQ+Q,qBAAuB,EAC5J,MAAO,CACL1N,OACA2J,gBAAiB,EACjBd,cAAe4E,EAAUC,GAAwBzD,KAAKC,MAAQ,EAC9DlE,MAAO,KACP4D,iBAAkB,EAClByD,eAAgB,EAChBH,kBAAmB,EACnBC,mBAAoB,KACpBf,UAAW,KACXrC,eAAe,EACf7M,OAAQuQ,EAAU,UAAY,UAC9BpR,YAAa,OAEjB,CCnaA,SAASsR,GAAsBC,GAC7B,MAAO,CACLzB,QAAS,CAACJ,EAAS/P,mBACjB,MAAMW,EAAUoP,EAAQpP,QAClBkR,EAAY,OAAAtK,EAAA,OAAApC,EAAA,OAAAlG,EAAA8Q,EAAQnL,mBAAR,EAAA3F,EAAsBwN,WAAtB,EAAAtH,EAA4B2M,kBAA5BvK,EAAuCsK,UACnDE,GAAW,OAAAhH,EAAAgF,EAAQhP,MAAMiD,WAAd,EAAA+G,EAAoB6G,QAAS,GACxCI,GAAgB,OAAAtG,EAAAqE,EAAQhP,MAAMiD,WAAd,EAAA0H,EAAoBuG,aAAc,GACxD,IAAIlQ,EAAS,CAAE6P,MAAO,GAAIK,WAAY,IAClCC,EAAc,EAClB,MAAMxC,EAAUyC,UACd,IAAIC,GAAY,EAChB,MAeMvN,EAAUF,GAAcoL,EAAQpP,QAASoP,EAAQnL,cACjDyN,EAAYF,MAAOnO,EAAMsO,EAAOC,KACpC,GAAIH,EACF,OAAOrN,QAAQC,SAEjB,GAAa,MAATsN,GAAiBtO,EAAK4N,MAAMjP,OAC9B,OAAOoC,QAAQ8D,QAAQ7E,GAEzB,MAWM2L,EAXuB,MAC3B,MAAMC,EAAkB,CACtBtD,OAAQyD,EAAQzD,OAChB/L,SAAUwP,EAAQxP,SAClBiS,UAAWF,EACXT,UAAWU,EAAW,WAAa,UACnC9F,KAAMsD,EAAQpP,QAAQ8L,MA7BF,IAAC4C,EAgCvB,OAhCuBA,EA+BLO,EA9BpBjO,OAAO2N,eAAeD,EAAQ,SAAU,CACtCE,YAAY,EACZC,IAAK,KACCO,EAAQN,OAAOgD,QACjBL,GAAY,EAEZrC,EAAQN,OAAOhK,iBAAiB,QAAS,KACvC2M,GAAY,IAGTrC,EAAQN,UAqBVG,GAEcC,GACjB6C,QAAa7N,EAAQ8K,IACrBgD,SAAEA,GAAa5C,EAAQpP,QACvBiS,EAAQL,EAAW/N,GAAaN,GACtC,MAAO,CACL0N,MAAOgB,EAAM5O,EAAK4N,MAAOc,EAAMC,GAC/BV,WAAYW,EAAM5O,EAAKiO,WAAYK,EAAOK,KAG9C,GAAId,GAAaE,EAASpP,OAAQ,CAChC,MAAM4P,EAAyB,aAAdV,EAEXgB,EAAU,CACdjB,MAAOG,EACPE,WAAYD,GAERM,GALcC,EAAWO,GAAuBC,IAK5BpS,EAASkS,GACnC9Q,QAAesQ,EAAUQ,EAASP,EAAOC,EAC3C,KAAO,CACL,MAAMS,EAAiBpB,GAASG,EAASpP,OACzC,EAAG,CACD,MAAM2P,EAAwB,IAAhBJ,EAAoBF,EAAc,IAAMrR,EAAQsS,iBAAmBF,GAAiBpS,EAASoB,GAC3G,GAAImQ,EAAc,GAAc,MAATI,EACrB,MAEFvQ,QAAesQ,EAAUtQ,EAAQuQ,GACjCJ,GACF,OAASA,EAAcc,EACzB,CACA,OAAOjR,GAELgO,EAAQpP,QAAQmP,UAClBC,EAAQL,QAAU,aAChB,OAAO,OAAAvK,GAAAlG,EAAA8Q,EAAQpP,SAAQmP,kBAAhB3K,EAAA/B,KAAAnE,EACLyQ,EACA,CACEpD,OAAQyD,EAAQzD,OAChB/L,SAAUwP,EAAQxP,SAClBkM,KAAMsD,EAAQpP,QAAQ8L,KACtBgD,OAAQM,EAAQN,QAElBzP,IAIJ+P,EAAQL,QAAUA,GAI1B,CACA,SAASqD,GAAiBpS,GAASiR,MAAEA,EAAAK,WAAOA,IAC1C,MAAMiB,EAAYtB,EAAMjP,OAAS,EACjC,OAAOiP,EAAMjP,OAAS,EAAIhC,EAAQoS,iBAChCnB,EAAMsB,GACNtB,EACAK,EAAWiB,GACXjB,QACE,CACN,CACA,SAASa,GAAqBnS,GAASiR,MAAEA,EAAAK,WAAOA,UAC9C,OAAOL,EAAMjP,OAAS,EAAI,OAAA1D,EAAA0B,EAAQmS,2BAAR,EAAA7T,EAAAmE,KAAAzC,EAA+BiR,EAAM,GAAIA,EAAOK,EAAW,GAAIA,QAAc,CACzG,CCxGA,IAAIkB,IAAW7C,gBAAcxF,GAI3B,WAAApN,CAAY+K,GACVrD,QALWlG,EAAAvB,KAAAyV,GACblU,EAAAvB,KAAA0V,GACAnU,EAAAvB,KAAA2V,GACApU,EAAAvB,KAAAqO,GAGErO,KAAK4V,WAAa9K,EAAO8K,WACzBhU,EAAA5B,KAAK2V,EAAiB7K,EAAO+K,eAC7BjU,EAAA5B,KAAK0V,EAAa,IAClB1V,KAAKoD,MAAQ0H,EAAO1H,OAgNf,CACLgP,aAAS,EACT/L,UAAM,EACNgG,MAAO,KACPhC,aAAc,EACdyL,cAAe,KACfC,UAAU,EACVxS,OAAQ,OACRyS,eAAW,EACXC,YAAa,GAxNbjW,KAAKyO,WAAW3D,EAAO9H,SACvBhD,KAAKwN,YACP,CACA,UAAAiB,CAAWzL,GACThD,KAAKgD,QAAUA,EACfhD,KAAK4N,aAAa5N,KAAKgD,QAAQyK,OACjC,CACA,QAAIqB,GACF,OAAO9O,KAAKgD,QAAQ8L,IACtB,CACA,WAAAiC,CAAYpB,GACL9N,EAAA7B,KAAK0V,GAAW1E,SAASrB,KAC5B9N,EAAA7B,KAAK0V,GAAW1M,KAAK2G,GACrB3P,KAAKuN,iBACL1L,EAAA7B,KAAK2V,GAAe1E,OAAO,CACzBzO,KAAM,gBACNc,SAAUtD,KACV2P,aAGN,CACA,cAAAuB,CAAevB,GACb/N,EAAA5B,KAAK0V,EAAa7T,EAAA7B,KAAK0V,GAAWvE,OAAQT,GAAMA,IAAMf,IACtD3P,KAAKwN,aACL3L,EAAA7B,KAAK2V,GAAe1E,OAAO,CACzBzO,KAAM,kBACNc,SAAUtD,KACV2P,YAEJ,CACA,cAAAhC,GACO9L,EAAA7B,KAAK0V,GAAW1Q,SACO,YAAtBhF,KAAKoD,MAAMG,OACbvD,KAAKwN,aAEL3L,EAAA7B,KAAK2V,GAAevG,OAAOpP,MAGjC,CACA,iBACE,OAAO,OAAAsB,EAAAO,EAAA7B,KAAKqO,SAAL,EAAA/M,EAAeyL,aACtB/M,KAAKkW,QAAQlW,KAAKoD,MAAM4S,UAC1B,CACA,aAAME,CAAQF,+CACZ,MAAM9J,EAAa,KACjBoD,EAAAtP,KAAKyV,EAAApE,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,cAEzBZ,EAAA5B,KAAKqO,EAAWxD,GAAc,CAC5BtB,GAAI,IACGvJ,KAAKgD,QAAQmT,WAGXnW,KAAKgD,QAAQmT,WAAWH,GAFtB5O,QAAQC,OAAO,IAAIC,MAAM,wBAIpCoF,OAAQ,CAACrC,EAAcgC,KACrBiD,EAAAtP,KAAKyV,EAAApE,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,SAAU6H,eAAcgC,WAEjDL,QAAS,KACPsD,EAAAtP,KAAKyV,EAAApE,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,WAEzB0J,aACAI,MAAOtM,KAAKgD,QAAQsJ,OAAS,EAC7BC,WAAYvM,KAAKgD,QAAQuJ,WACzB9B,YAAazK,KAAKgD,QAAQyH,YAC1BmB,OAAQ,IAAM/J,EAAA7B,KAAK2V,GAAe/J,OAAO5L,SAE3C,MAAMoW,EAAiC,YAAtBpW,KAAKoD,MAAMG,OACtBwS,GAAYlU,EAAA7B,KAAKqO,GAASxC,WAChC,IACE,GAAIuK,EACFlK,QACK,CACLoD,EAAAtP,KAAKyV,EAAApE,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,UAAWwT,YAAWD,mBACvC,OAAAvO,GAAAlG,EAAAO,EAAA7B,KAAK2V,GAAe7K,QAAOuL,iBAA3B7O,EAAA/B,KAAAnE,EACJ0U,EACAhW,OAEF,MAAMoS,QAAgB,OAAAhF,GAAAxD,EAAA5J,KAAKgD,SAAQqT,eAAb,EAAAjJ,EAAA3H,KAAAmE,EAAwBoM,IAC1C5D,IAAYpS,KAAKoD,MAAMgP,SACzB9C,EAAAtP,KAAKyV,EAAApE,GAAL5L,KAAAzF,KAAe,CACbwC,KAAM,UACN4P,UACA4D,YACAD,YAGN,CACA,MAAM1P,QAAaxE,EAAA7B,KAAKqO,GAASnB,QAiBjC,aAhBM,OAAAyF,GAAA5E,EAAAlM,EAAA7B,KAAK2V,GAAe7K,QAAO8H,kBAA3BD,EAAAlN,KAAAsI,EACJ1H,EACA2P,EACAhW,KAAKoD,MAAMgP,QACXpS,aAEI,OAAA6S,GAAAC,EAAA9S,KAAKgD,SAAQ4P,gBAAb,EAAAC,EAAApN,KAAAqN,EAAyBzM,EAAM2P,EAAWhW,KAAKoD,MAAMgP,gBACrD,OAAAY,GAAAC,EAAApR,EAAA7B,KAAK2V,GAAe7K,QAAOiI,gBAA3B,EAAAC,EAAAvN,KAAAwN,EACJ5M,EACA,KACArG,KAAKoD,MAAM4S,UACXhW,KAAKoD,MAAMgP,QACXpS,aAEI,OAAAmT,GAAAC,EAAApT,KAAKgD,SAAQ+P,gBAAb,EAAAI,EAAA1N,KAAA2N,EAAyB/M,EAAM,KAAM2P,EAAWhW,KAAKoD,MAAMgP,UACjE9C,EAAAtP,KAAKyV,EAAApE,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,UAAW6D,SAC3BA,CACT,OAASgG,GACP,IAyBE,YAxBM,OAAAiK,GAAAC,EAAA1U,EAAA7B,KAAK2V,GAAe7K,QAAOoI,cAA3B,EAAAoD,EAAA7Q,KAAA8Q,EACJlK,EACA2J,EACAhW,KAAKoD,MAAMgP,QACXpS,aAEI,OAAAwW,GAAAC,EAAAzW,KAAKgD,SAAQkQ,cAAb,EAAAsD,EAAA/Q,KAAAgR,EACJpK,EACA2J,EACAhW,KAAKoD,MAAMgP,gBAEP,OAAAsE,GAAAC,EAAA9U,EAAA7B,KAAK2V,GAAe7K,QAAOiI,gBAA3B,EAAA2D,EAAAjR,KAAAkR,OACJ,EACAtK,EACArM,KAAKoD,MAAM4S,UACXhW,KAAKoD,MAAMgP,QACXpS,aAEI,OAAA4W,GAAAC,EAAA7W,KAAKgD,SAAQ+P,gBAAb,EAAA6D,EAAAnR,KAAAoR,OACJ,EACAxK,EACA2J,EACAhW,KAAKoD,MAAMgP,UAEP/F,CACR,CAAA,QACEiD,EAAAtP,KAAKyV,EAAApE,GAAL5L,KAAAzF,KAAe,CAAEwC,KAAM,QAAS6J,SAClC,CACF,CAAA,QACExK,EAAA7B,KAAK2V,GAAemB,QAAQ9W,KAC9B,CACF,GAnJA0V,cACAC,EAAA,IAAA7T,QACAuM,EAAA,YAHaoH,EAAA,IAAApC,QAqJbhC,EAAS,SAACiC,GAsDRtT,KAAKoD,MArDW,CAACA,IACf,OAAQkQ,EAAO9Q,MACb,IAAK,SACH,MAAO,IACFY,EACHiH,aAAciJ,EAAOjJ,aACrByL,cAAexC,EAAOjH,OAE1B,IAAK,QACH,MAAO,IACFjJ,EACH2S,UAAU,GAEd,IAAK,WACH,MAAO,IACF3S,EACH2S,UAAU,GAEd,IAAK,UACH,MAAO,IACF3S,EACHgP,QAASkB,EAAOlB,QAChB/L,UAAM,EACNgE,aAAc,EACdyL,cAAe,KACfzJ,MAAO,KACP0J,SAAUzC,EAAOyC,SACjBxS,OAAQ,UACRyS,UAAW1C,EAAO0C,UAClBC,YAAa3F,KAAKC,OAEtB,IAAK,UACH,MAAO,IACFnN,EACHiD,KAAMiN,EAAOjN,KACbgE,aAAc,EACdyL,cAAe,KACfzJ,MAAO,KACP9I,OAAQ,UACRwS,UAAU,GAEd,IAAK,QACH,MAAO,IACF3S,EACHiD,UAAM,EACNgG,MAAOiH,EAAOjH,MACdhC,aAAcjH,EAAMiH,aAAe,EACnCyL,cAAexC,EAAOjH,MACtB0J,UAAU,EACVxS,OAAQ,WAIHoQ,CAAQ3T,KAAKoD,OAC1BqF,GAAcQ,MAAM,KAClBpH,EAAA7B,KAAK0V,GAAWrN,QAASsH,IACvBA,EAASoH,iBAAiBzD,KAE5BzR,EAAA7B,KAAK2V,GAAe1E,OAAO,CACzB3N,SAAUtD,KACVwC,KAAM,UACN8Q,YAGN,EAtNaX,GCCXqE,IAAgBlE,gBAAchT,EAChC,WAAAC,CAAY+K,EAAS,IACnBrD,QAMFlG,EAAAvB,KAAAiX,GACA1V,EAAAvB,KAAAkX,GACA3V,EAAAvB,KAAAmX,GAPEnX,KAAK8K,OAASA,EACdlJ,EAAA5B,KAAKiX,MAAiC/W,KACtC0B,EAAA5B,KAAKkX,MAA8BE,KACnCxV,EAAA5B,KAAKmX,EAAc,EACrB,CAIA,KAAAE,CAAM1I,EAAQ3L,EAASI,GACrB,MAAME,EAAW,IAAIkS,GAAS,CAC5BK,cAAe7V,KACf4V,aAAc0B,EAAAtX,KAAKmX,GAALtT,EACdb,QAAS2L,EAAO4I,uBAAuBvU,GACvCI,UAGF,OADApD,KAAKM,IAAIgD,GACFA,CACT,CACA,GAAAhD,CAAIgD,GACFzB,EAAA7B,KAAKiX,GAAW3W,IAAIgD,GACpB,MAAMkU,EAAQC,GAASnU,GACvB,GAAqB,iBAAVkU,EAAoB,CAC7B,MAAME,EAAkB7V,EAAA7B,KAAKkX,GAAQrF,IAAI2F,GACrCE,EACFA,EAAgB1O,KAAK1F,GAErBzB,EAAA7B,KAAKkX,GAAQS,IAAIH,EAAO,CAAClU,GAE7B,CACAtD,KAAKiR,OAAO,CAAEzO,KAAM,QAASc,YAC/B,CACA,MAAA8L,CAAO9L,GACL,GAAIzB,EAAA7B,KAAKiX,GAAWzW,OAAO8C,GAAW,CACpC,MAAMkU,EAAQC,GAASnU,GACvB,GAAqB,iBAAVkU,EAAoB,CAC7B,MAAME,EAAkB7V,EAAA7B,KAAKkX,GAAQrF,IAAI2F,GACzC,GAAIE,EACF,GAAIA,EAAgB1S,OAAS,EAAG,CAC9B,MAAM4S,EAAQF,EAAgBG,QAAQvU,IACxB,IAAVsU,GACFF,EAAgBI,OAAOF,EAAO,EAElC,MAAWF,EAAgB,KAAOpU,GAChCzB,EAAA7B,KAAKkX,GAAQ1W,OAAOgX,EAG1B,CACF,CACAxX,KAAKiR,OAAO,CAAEzO,KAAM,UAAWc,YACjC,CACA,MAAAsI,CAAOtI,GACL,MAAMkU,EAAQC,GAASnU,GACvB,GAAqB,iBAAVkU,EAAoB,CAC7B,MAAMO,EAAyBlW,EAAA7B,KAAKkX,GAAQrF,IAAI2F,GAC1CQ,EAAuB,MAAAD,OAAA,EAAAA,EAAwBtH,KAClDwH,GAAyB,YAAnBA,EAAE7U,MAAMG,QAEjB,OAAQyU,GAAwBA,IAAyB1U,CAC3D,CACE,OAAO,CAEX,CACA,OAAAwT,CAAQxT,SACN,MAAMkU,EAAQC,GAASnU,GACvB,GAAqB,iBAAVkU,EAAoB,CAC7B,MAAMU,EAAgB,OAAA5W,EAAAO,EAAA7B,KAAKkX,GAAQrF,IAAI2F,SAAjB,EAAAlW,EAAyBmP,KAAMwH,GAAMA,IAAM3U,GAAY2U,EAAE7U,MAAM2S,UACrF,OAAO,MAAAmC,OAAA,EAAAA,EAAenL,aAAc3F,QAAQ8D,SAC9C,CACE,OAAO9D,QAAQ8D,SAEnB,CACA,KAAAiN,GACE1P,GAAcQ,MAAM,KAClBpH,EAAA7B,KAAKiX,GAAW5O,QAAS/E,IACvBtD,KAAKiR,OAAO,CAAEzO,KAAM,UAAWc,eAEjCzB,EAAA7B,KAAKiX,GAAWkB,QAChBtW,EAAA7B,KAAKkX,GAAQiB,SAEjB,CACA,MAAAC,GACE,OAAOhT,MAAMiT,KAAKxW,EAAA7B,KAAKiX,GACzB,CACA,IAAAxG,CAAKlO,GACH,MAAM+V,EAAmB,CAAE7V,OAAO,KAASF,GAC3C,OAAOvC,KAAKoY,SAAS3H,KAClBnN,GAAaD,GAAciV,EAAkBhV,GAElD,CACA,OAAAiV,CAAQhW,EAAU,IAChB,OAAOvC,KAAKoY,SAASjH,OAAQ7N,GAAaD,GAAcd,EAASe,GACnE,CACA,MAAA2N,CAAOuH,GACL/P,GAAcQ,MAAM,KAClBjJ,KAAKC,UAAUoI,QAAShI,IACtBA,EAASmY,MAGf,CACA,qBAAAC,GACE,MAAMC,EAAkB1Y,KAAKoY,SAASjH,OAAQT,GAAMA,EAAEtN,MAAM2S,UAC5D,OAAOtN,GAAcQ,MACnB,IAAM7B,QAAQuR,IACZD,EAAgBE,IAAKtV,GAAaA,EAASyJ,WAAWxB,MAAMrJ,MAGlE,GArGA+U,EAAA,IAAAnV,QACAoV,cACAC,EAAA,IAAArV,QAVkBgR,GA+GpB,SAAS2E,GAASnU,SAChB,OAAO,OAAAhC,EAAAgC,EAASN,QAAQwU,cAAjBlW,EAAwBuX,EACjC,CCjHA,IAAIC,IAAajG,gBAAc/S,EAC7B,WAAAC,CAAY+K,EAAS,IACnBrD,QAIFlG,EAAAvB,KAAA+Y,GAHE/Y,KAAK8K,OAASA,EACdlJ,EAAA5B,KAAK+Y,MAA+B3B,IACtC,CAEA,KAAAC,CAAM1I,EAAQ3L,EAASI,GACrB,MAAMR,EAAWI,EAAQJ,SACnBE,EAAYE,EAAQF,WAAaC,GAAsBH,EAAUI,GACvE,IAAIX,EAAQrC,KAAK6R,IAAI/O,GAYrB,OAXKT,IACHA,EAAQ,IAAIyL,GAAM,CAChBa,SACA/L,WACAE,YACAE,QAAS2L,EAAOqK,oBAAoBhW,GACpCI,QACAoL,eAAgBG,EAAOsK,iBAAiBrW,KAE1C5C,KAAKM,IAAI+B,IAEJA,CACT,CACA,GAAA/B,CAAI+B,GACGR,EAAA7B,KAAK+Y,GAASG,IAAI7W,EAAMS,aAC3BjB,EAAA7B,KAAK+Y,GAASpB,IAAItV,EAAMS,UAAWT,GACnCrC,KAAKiR,OAAO,CACVzO,KAAM,QACNH,UAGN,CACA,MAAA+M,CAAO/M,GACL,MAAM8W,EAAatX,EAAA7B,KAAK+Y,GAASlH,IAAIxP,EAAMS,WACvCqW,IACF9W,EAAMiL,UACF6L,IAAe9W,GACjBR,EAAA7B,KAAK+Y,GAASvY,OAAO6B,EAAMS,WAE7B9C,KAAKiR,OAAO,CAAEzO,KAAM,UAAWH,UAEnC,CACA,KAAA8V,GACE1P,GAAcQ,MAAM,KAClBjJ,KAAKoY,SAAS/P,QAAShG,IACrBrC,KAAKoP,OAAO/M,MAGlB,CACA,GAAAwP,CAAI/O,GACF,OAAOjB,EAAA7B,KAAK+Y,GAASlH,IAAI/O,EAC3B,CACA,MAAAsV,GACE,MAAO,IAAIvW,EAAA7B,KAAK+Y,GAASK,SAC3B,CACA,IAAA3I,CAAKlO,GACH,MAAM+V,EAAmB,CAAE7V,OAAO,KAASF,GAC3C,OAAOvC,KAAKoY,SAAS3H,KAClBpO,GAAUC,GAAWgW,EAAkBjW,GAE5C,CACA,OAAAkW,CAAQhW,EAAU,IAChB,MAAM8W,EAAUrZ,KAAKoY,SACrB,OAAOpU,OAAOC,KAAK1B,GAASyC,OAAS,EAAIqU,EAAQlI,OAAQ9O,GAAUC,GAAWC,EAASF,IAAUgX,CACnG,CACA,MAAApI,CAAOuH,GACL/P,GAAcQ,MAAM,KAClBjJ,KAAKC,UAAUoI,QAAShI,IACtBA,EAASmY,MAGf,CACA,OAAA3Q,GACEY,GAAcQ,MAAM,KAClBjJ,KAAKoY,SAAS/P,QAAShG,IACrBA,EAAMwF,aAGZ,CACA,QAAAiC,GACErB,GAAcQ,MAAM,KAClBjJ,KAAKoY,SAAS/P,QAAShG,IACrBA,EAAMyH,cAGZ,GAhFAiP,EAAA,IAAAjX,QANe+Q,GCWbyG,IAAcrG,EAAA,MAShB,WAAAlT,CAAY+K,EAAS,IARrBvJ,EAAAvB,KAAAuZ,GACAhY,EAAAvB,KAAA2V,GACApU,EAAAvB,KAAAsO,GACA/M,EAAAvB,KAAAwZ,GACAjY,EAAAvB,KAAAyZ,GACAlY,EAAAvB,KAAA0Z,GACAnY,EAAAvB,KAAA2Z,GACApY,EAAAvB,KAAA4Z,GAEEhY,EAAA5B,KAAKuZ,EAAczO,EAAO+O,YAAc,IAAIf,IAC5ClX,EAAA5B,KAAK2V,EAAiB7K,EAAO+K,eAAiB,IAAImB,IAClDpV,EAAA5B,KAAKsO,EAAkBxD,EAAO0D,gBAAkB,CAAA,GAChD5M,EAAA5B,KAAKwZ,MAAqCpC,KAC1CxV,EAAA5B,KAAKyZ,MAAwCrC,KAC7CxV,EAAA5B,KAAK0Z,EAAc,EACrB,CACA,KAAAI,GACExC,EAAAtX,KAAK0Z,GAAL7V,IACyB,IAArBhC,EAAA7B,KAAK0Z,KACT9X,EAAA5B,KAAK2Z,EAAoBpS,GAAapH,UAAUqU,MAAOtM,IACjDA,UACIlI,KAAKyY,wBACX5W,EAAA7B,KAAKuZ,GAAY1R,cAGrBjG,EAAA5B,KAAK4Z,EAAqBjQ,GAAcxJ,UAAUqU,MAAOtK,IACnDA,UACIlK,KAAKyY,wBACX5W,EAAA7B,KAAKuZ,GAAYzP,eAGvB,CACA,OAAAiQ,WACEzC,EAAAtX,KAAK0Z,GAAL7V,IACyB,IAArBhC,EAAA7B,KAAK0Z,KACT,OAAApY,EAAAO,EAAA7B,KAAK2Z,KAALrY,EAAAmE,KAAAzF,MACA4B,EAAA5B,KAAK2Z,OAAoB,GACzB,OAAAnS,EAAA3F,EAAA7B,KAAK4Z,KAALpS,EAAA/B,KAAAzF,MACA4B,EAAA5B,KAAK4Z,OAAqB,GAC5B,CACA,UAAAI,CAAWzX,GACT,OAAOV,EAAA7B,KAAKuZ,GAAYhB,QAAQ,IAAKhW,EAASG,YAAa,aAAcsC,MAC3E,CACA,UAAAiV,CAAW1X,GACT,OAAOV,EAAA7B,KAAK2V,GAAe4C,QAAQ,IAAKhW,EAASgB,OAAQ,YAAayB,MACxE,CAQA,YAAAkV,CAAatX,SACX,MAAMI,EAAUhD,KAAKgZ,oBAAoB,CAAEpW,aAC3C,OAAO,OAAAtB,EAAAO,OAAK0X,GAAY1H,IAAI7O,EAAQF,iBAA7B,EAAAxB,EAAyC8B,MAAMiD,IACxD,CACA,eAAA8T,CAAgBnX,GACd,MAAMoX,EAAmBpa,KAAKgZ,oBAAoBhW,GAC5CX,EAAQR,EAAA7B,KAAKuZ,GAAYlC,MAAMrX,KAAMoa,GACrCC,EAAahY,EAAMe,MAAMiD,KAC/B,YAAmB,IAAfgU,EACKra,KAAKsa,WAAWtX,IAErBA,EAAQuX,mBAAqBlY,EAAMgO,cAAclO,GAAiBiY,EAAiBhY,UAAWC,KAC3FrC,KAAKwa,cAAcJ,GAEnBhT,QAAQ8D,QAAQmP,GACzB,CACA,cAAAI,CAAelY,GACb,OAAOV,EAAA7B,KAAKuZ,GAAYhB,QAAQhW,GAASqW,IAAI,EAAGhW,WAAUQ,WAEjD,CAACR,EADKQ,EAAMiD,MAGvB,CACA,YAAAqU,CAAa9X,EAAU+X,EAAS3X,GAC9B,MAAMoX,EAAmBpa,KAAKgZ,oBAAoB,CAAEpW,aAC9CP,EAAQR,OAAK0X,GAAY1H,IAC7BuI,EAAiBtX,WAGbuD,EZ7FV,SAA0BsU,EAASC,GACjC,MAA0B,mBAAZD,EAAyBA,EAAQC,GAASD,CAC1D,CY2FiBE,CAAiBF,QADbtY,WAAOe,MAAMiD,MAE9B,QAAa,IAATA,EAGJ,OAAOxE,EAAA7B,KAAKuZ,GAAYlC,MAAMrX,KAAMoa,GAAkBpL,QAAQ3I,EAAM,IAAKrD,EAASmM,QAAQ,GAC5F,CACA,cAAA2L,CAAevY,EAASoY,EAAS3X,GAC/B,OAAOyF,GAAcQ,MACnB,IAAMpH,EAAA7B,KAAKuZ,GAAYhB,QAAQhW,GAASqW,IAAI,EAAGhW,cAAe,CAC5DA,EACA5C,KAAK0a,aAAa9X,EAAU+X,EAAS3X,KAG3C,CACA,aAAA+X,CAAcnY,SACZ,MAAMI,EAAUhD,KAAKgZ,oBAAoB,CAAEpW,aAC3C,OAAO,OAAAtB,EAAAO,OAAK0X,GAAY1H,IACtB7O,EAAQF,mBADHxB,EAEJ8B,KACL,CACA,aAAA4X,CAAczY,GACZ,MAAMsX,EAAahY,EAAA7B,KAAKuZ,GACxB9Q,GAAcQ,MAAM,KAClB4Q,EAAWtB,QAAQhW,GAAS8F,QAAShG,IACnCwX,EAAWzK,OAAO/M,MAGxB,CACA,YAAA4Y,CAAa1Y,EAASS,GACpB,MAAM6W,EAAahY,EAAA7B,KAAKuZ,GACxB,OAAO9Q,GAAcQ,MAAM,KACzB4Q,EAAWtB,QAAQhW,GAAS8F,QAAShG,IACnCA,EAAMoN,UAEDzP,KAAKkb,eACV,CACE1Y,KAAM,YACHD,GAELS,IAGN,CACA,aAAAmY,CAAc5Y,EAASsK,EAAgB,IACrC,MAAMuO,EAAyB,CAAEzQ,QAAQ,KAASkC,GAC5CwO,EAAW5S,GAAcQ,MAC7B,IAAMpH,EAAA7B,KAAKuZ,GAAYhB,QAAQhW,GAASqW,IAAKvW,GAAUA,EAAMuK,OAAOwO,KAEtE,OAAOhU,QAAQuR,IAAI0C,GAAUpP,KAAK/J,IAAMqJ,MAAMrJ,GAChD,CACA,iBAAAoZ,CAAkB/Y,EAASS,EAAU,IACnC,OAAOyF,GAAcQ,MAAM,KACzBpH,EAAA7B,KAAKuZ,GAAYhB,QAAQhW,GAAS8F,QAAShG,IACzCA,EAAM+O,eAEqB,UAAzB,MAAA7O,OAAA,EAAAA,EAASgZ,aACJnU,QAAQ8D,UAEVlL,KAAKkb,eACV,IACK3Y,EACHC,MAAM,MAAAD,OAAA,EAAAA,EAASgZ,eAAe,MAAAhZ,OAAA,EAAAA,EAASC,OAAQ,UAEjDQ,IAGN,CACA,cAAAkY,CAAe3Y,EAASS,EAAU,IAChC,MAAMiE,EAAe,IAChBjE,EACH6N,cAAe7N,EAAQ6N,gBAAiB,GAEpCwK,EAAW5S,GAAcQ,MAC7B,IAAMpH,OAAK0X,GAAYhB,QAAQhW,GAAS4O,OAAQ9O,IAAWA,EAAMyN,eAAiBzN,EAAM6N,YAAY0I,IAAKvW,IACvG,IAAIsK,EAAUtK,EAAMiP,WAAM,EAAQrK,GAIlC,OAHKA,EAAauU,eAChB7O,EAAUA,EAAQpB,MAAMrJ,KAES,WAA5BG,EAAMe,MAAMV,YAA2B0E,QAAQ8D,UAAYyB,KAGtE,OAAOvF,QAAQuR,IAAI0C,GAAUpP,KAAK/J,GACpC,CACA,UAAAoY,CAAWtX,GACT,MAAMoX,EAAmBpa,KAAKgZ,oBAAoBhW,QACnB,IAA3BoX,EAAiB9N,QACnB8N,EAAiB9N,OAAQ,GAE3B,MAAMjK,EAAQR,EAAA7B,KAAKuZ,GAAYlC,MAAMrX,KAAMoa,GAC3C,OAAO/X,EAAMgO,cACXlO,GAAiBiY,EAAiBhY,UAAWC,IAC3CA,EAAMiP,MAAM8I,GAAoBhT,QAAQ8D,QAAQ7I,EAAMe,MAAMiD,KAClE,CACA,aAAAmU,CAAcxX,GACZ,OAAOhD,KAAKsa,WAAWtX,GAASiJ,KAAK/J,IAAMqJ,MAAMrJ,GACnD,CACA,kBAAAuZ,CAAmBzY,GAEjB,OADAA,EAAQuP,SAAWyB,GAAsBhR,EAAQiR,OAC1CjU,KAAKsa,WAAWtX,EACzB,CACA,qBAAA0Y,CAAsB1Y,GACpB,OAAOhD,KAAKyb,mBAAmBzY,GAASiJ,KAAK/J,IAAMqJ,MAAMrJ,GAC3D,CACA,uBAAAyZ,CAAwB3Y,GAEtB,OADAA,EAAQuP,SAAWyB,GAAsBhR,EAAQiR,OAC1CjU,KAAKma,gBAAgBnX,EAC9B,CACA,qBAAAyV,GACE,OAAI9O,GAAcQ,WACTtI,EAAA7B,KAAK2V,GAAe8C,wBAEtBrR,QAAQ8D,SACjB,CACA,aAAA0D,GACE,OAAO/M,EAAA7B,KAAKuZ,EACd,CACA,gBAAAqC,GACE,OAAO/Z,EAAA7B,KAAK2V,EACd,CACA,iBAAAkG,GACE,OAAOha,EAAA7B,KAAKsO,EACd,CACA,iBAAAwN,CAAkB9Y,GAChBpB,EAAA5B,KAAKsO,EAAkBtL,EACzB,CACA,gBAAA+Y,CAAiBnZ,EAAUI,GACzBnB,EAAA7B,KAAKwZ,GAAe7B,IAAIlU,GAAQb,GAAW,CACzCA,WACA4L,eAAgBxL,GAEpB,CACA,gBAAAiW,CAAiBrW,GACf,MAAMoZ,EAAW,IAAIna,EAAA7B,KAAKwZ,GAAeJ,UACnChV,EAAS,CAAA,EAMf,OALA4X,EAAS3T,QAAS4T,IACZhZ,GAAgBL,EAAUqZ,EAAarZ,WACzCoB,OAAOsH,OAAOlH,EAAQ6X,EAAazN,kBAGhCpK,CACT,CACA,mBAAA8X,CAAoB1Y,EAAaR,GAC/BnB,EAAA7B,KAAKyZ,GAAkB9B,IAAIlU,GAAQD,GAAc,CAC/CA,cACAgL,eAAgBxL,GAEpB,CACA,mBAAAmZ,CAAoB3Y,GAClB,MAAMwY,EAAW,IAAIna,EAAA7B,KAAKyZ,GAAkBL,UACtChV,EAAS,CAAA,EAMf,OALA4X,EAAS3T,QAAS4T,IACZhZ,GAAgBO,EAAayY,EAAazY,cAC5CQ,OAAOsH,OAAOlH,EAAQ6X,EAAazN,kBAGhCpK,CACT,CACA,mBAAA4U,CAAoBhW,GAClB,GAAIA,EAAQoZ,WACV,OAAOpZ,EAET,MAAMoX,EAAmB,IACpBvY,OAAKyM,GAAgB+K,WACrBrZ,KAAKiZ,iBAAiBjW,EAAQJ,aAC9BI,EACHoZ,YAAY,GAoBd,OAlBKhC,EAAiBtX,YACpBsX,EAAiBtX,UAAYC,GAC3BqX,EAAiBxX,SACjBwX,SAGwC,IAAxCA,EAAiBiC,qBACnBjC,EAAiBiC,mBAAsD,WAAjCjC,EAAiB3P,kBAEnB,IAAlC2P,EAAiBoB,eACnBpB,EAAiBoB,eAAiBpB,EAAiBkC,WAEhDlC,EAAiB3P,aAAe2P,EAAiBjI,YACpDiI,EAAiB3P,YAAc,gBAE7B2P,EAAiBlT,UAAYJ,KAC/BsT,EAAiBvK,SAAU,GAEtBuK,CACT,CACA,sBAAA7C,CAAuBvU,GACrB,aAAIA,WAASoZ,YACJpZ,EAEF,IACFnB,OAAKyM,GAAgBiO,cACrB,MAAAvZ,OAAA,EAAAA,EAASQ,cAAexD,KAAKmc,oBAAoBnZ,EAAQQ,gBACzDR,EACHoZ,YAAY,EAEhB,CACA,KAAAjE,GACEtW,EAAA7B,KAAKuZ,GAAYpB,QACjBtW,EAAA7B,KAAK2V,GAAewC,OACtB,GA1RAoB,EAAA,IAAAzX,QACA6T,EAAA,IAAA7T,QACAwM,EAAA,YACAkL,EAAA,IAAA1X,QACA2X,EAAA,IAAA3X,QACA4X,EAAA,IAAA5X,QACA6X,EAAA,IAAA7X,QACA8X,EAAA,IAAA9X,QARgBmR,GCXduJ,GAAqBC,EAAAA,mBACvB,GAYEC,GAAsB,EACxB/N,SACAgO,eAEAC,EAAAA,UAAgB,KACdjO,EAAOmL,QACA,KACLnL,EAAOoL,YAER,CAACpL,IACmBkO,EAAAA,IAAIL,GAAmBM,SAAU,CAAEnX,MAAOgJ,EAAQgO","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}